// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SportsList.Models;

namespace SportsList.Migrations
{
    [DbContext(typeof(SportContext))]
    [Migration("20210218134857_AddedSportAndTypeToDb")]
    partial class AddedSportAndTypeToDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SportsList.Models.Sport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Sports");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ludu",
                            Price = 50m,
                            Rating = 5,
                            TypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Football",
                            Price = 1000m,
                            Rating = 5,
                            TypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Fifa 20",
                            Price = 20000m,
                            Rating = 4,
                            TypeId = 5
                        });
                });

            modelBuilder.Entity("SportsList.Models.Type", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeId");

                    b.ToTable("Types");

                    b.HasData(
                        new
                        {
                            TypeId = 1,
                            Name = "Indoor"
                        },
                        new
                        {
                            TypeId = 2,
                            Name = "Outdoor"
                        },
                        new
                        {
                            TypeId = 3,
                            Name = "Mobile"
                        },
                        new
                        {
                            TypeId = 4,
                            Name = "PC"
                        },
                        new
                        {
                            TypeId = 5,
                            Name = "Console"
                        });
                });

            modelBuilder.Entity("SportsList.Models.Sport", b =>
                {
                    b.HasOne("SportsList.Models.Type", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");
                });
#pragma warning restore 612, 618
        }
    }
}
